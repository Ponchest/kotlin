package

package test {
    public fun box(): kotlin.Unit
    public fun entries(/*0*/ map: kotlin.collections.HashMap<kotlin.String, kotlin.Int> /* = java.util.HashMap<kotlin.String, kotlin.Int> */): kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<kotlin.String, kotlin.Int>>
    public fun keys(/*0*/ map: kotlin.collections.HashMap<kotlin.String, kotlin.Int> /* = java.util.HashMap<kotlin.String, kotlin.Int> */): kotlin.collections.MutableSet<kotlin.String>
    public fun value(/*0*/ map: kotlin.collections.HashMap<kotlin.String, kotlin.Int> /* = java.util.HashMap<kotlin.String, kotlin.Int> */): kotlin.collections.MutableCollection<kotlin.Int>

    public final class MyMutableEntry</*0*/ K, /*1*/ V> : kotlin.collections.MutableMap.MutableEntry<K, V> {
        public constructor MyMutableEntry</*0*/ K, /*1*/ V>(/*0*/ key: K, /*1*/ value: V)
        public open override /*1*/ val key: K
        public open override /*1*/ var value: V
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ fun setValue(/*0*/ newValue: V): V
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

