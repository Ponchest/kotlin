STATUS:
TARGET: public open override [<synthetic> STATUS] var something: R|kotlin/String|
    public [<synthetic> ResolvedTo(STATUS)] get(): R|kotlin/String| { LAZY_BLOCK }
    public [<synthetic> ResolvedTo(STATUS)] set([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| { LAZY_BLOCK }

FILE: [ResolvedTo(IMPORTS)] Derived.kt
    public final [ResolvedTo(STATUS)] class Derived : R|Base| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Derived] constructor(): R|Derived| {
            LAZY_super<R|Base|>
        }

        public open override [ResolvedTo(STATUS)] fun getSomething(): R|kotlin/String| { LAZY_BLOCK }

        public open override [ResolvedTo(STATUS)] fun setSomething([ResolvedTo(STATUS)] s: R|kotlin/String|): R|kotlin/Unit| { LAZY_BLOCK }

    }

EXPECT_ACTUAL_MATCHING:
TARGET: public open override [<synthetic> EXPECT_ACTUAL_MATCHING] var something: R|kotlin/String|
    public [<synthetic> ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ExpectForActualAttributeKey={}] get(): R|kotlin/String| { LAZY_BLOCK }
    public [<synthetic> ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ExpectForActualAttributeKey={}] set([ResolvedTo(EXPECT_ACTUAL_MATCHING)] s: R|kotlin/String|): R|kotlin/Unit| { LAZY_BLOCK }

FILE: [ResolvedTo(IMPORTS)] Derived.kt
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ExpectForActualAttributeKey={}] class Derived : R|Base| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Derived] constructor(): R|Derived| {
            LAZY_super<R|Base|>
        }

        public open override [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ExpectForActualAttributeKey={}] fun getSomething(): R|kotlin/String| { LAZY_BLOCK }

        public open override [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ExpectForActualAttributeKey={}] fun setSomething([ResolvedTo(EXPECT_ACTUAL_MATCHING)] s: R|kotlin/String|): R|kotlin/Unit| { LAZY_BLOCK }

    }

CONTRACTS:
TARGET: public open override [<synthetic> CONTRACTS] var something: R|kotlin/String|
    public [<synthetic> ResolvedTo(CONTRACTS)] [ExpectForActualAttributeKey={}] get(): R|kotlin/String| {
        ^getSomething String(42)
    }
    public [<synthetic> ResolvedTo(CONTRACTS)] [ExpectForActualAttributeKey={}] set([ResolvedTo(CONTRACTS)] s: R|kotlin/String|): R|kotlin/Unit| {
    }

FILE: [ResolvedTo(IMPORTS)] Derived.kt
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ExpectForActualAttributeKey={}] class Derived : R|Base| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Derived] constructor(): R|Derived| {
            LAZY_super<R|Base|>
        }

        public open override [ResolvedTo(CONTRACTS)] [ExpectForActualAttributeKey={}] fun getSomething(): R|kotlin/String| {
            ^getSomething String(42)
        }

        public open override [ResolvedTo(CONTRACTS)] [ExpectForActualAttributeKey={}] fun setSomething([ResolvedTo(CONTRACTS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }

IMPLICIT_TYPES_BODY_RESOLVE:
TARGET: public open override [<synthetic> IMPLICIT_TYPES_BODY_RESOLVE] var something: R|kotlin/String|
    public [<synthetic> ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] [ExpectForActualAttributeKey={}] get(): R|kotlin/String| {
        ^getSomething String(42)
    }
    public [<synthetic> ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] [ExpectForActualAttributeKey={}] set([ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] s: R|kotlin/String|): R|kotlin/Unit| {
    }

FILE: [ResolvedTo(IMPORTS)] Derived.kt
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ExpectForActualAttributeKey={}] class Derived : R|Base| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Derived] constructor(): R|Derived| {
            LAZY_super<R|Base|>
        }

        public open override [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] [ExpectForActualAttributeKey={}] fun getSomething(): R|kotlin/String| {
            ^getSomething String(42)
        }

        public open override [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] [ExpectForActualAttributeKey={}] fun setSomething([ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }

ANNOTATION_ARGUMENTS:
TARGET: public open override [<synthetic> ANNOTATION_ARGUMENTS] var something: R|kotlin/String|
    public [<synthetic> ResolvedTo(ANNOTATION_ARGUMENTS)] [ExpectForActualAttributeKey={}] get(): R|kotlin/String| {
        ^getSomething String(42)
    }
    public [<synthetic> ResolvedTo(ANNOTATION_ARGUMENTS)] [ExpectForActualAttributeKey={}] set([ResolvedTo(ANNOTATION_ARGUMENTS)] s: R|kotlin/String|): R|kotlin/Unit| {
    }

FILE: [ResolvedTo(IMPORTS)] Derived.kt
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ExpectForActualAttributeKey={}] class Derived : R|Base| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Derived] constructor(): R|Derived| {
            LAZY_super<R|Base|>
        }

        public open override [ResolvedTo(ANNOTATION_ARGUMENTS)] [ExpectForActualAttributeKey={}] fun getSomething(): R|kotlin/String| {
            ^getSomething String(42)
        }

        public open override [ResolvedTo(ANNOTATION_ARGUMENTS)] [ExpectForActualAttributeKey={}] fun setSomething([ResolvedTo(ANNOTATION_ARGUMENTS)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }

BODY_RESOLVE:
TARGET: public open override [<synthetic> BODY_RESOLVE] var something: R|kotlin/String|
    public [<synthetic> ResolvedTo(BODY_RESOLVE)] [ExpectForActualAttributeKey={}] get(): R|kotlin/String| {
        ^getSomething String(42)
    }
    public [<synthetic> ResolvedTo(BODY_RESOLVE)] [ExpectForActualAttributeKey={}] set([ResolvedTo(BODY_RESOLVE)] s: R|kotlin/String|): R|kotlin/Unit| {
    }

FILE: [ResolvedTo(IMPORTS)] Derived.kt
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ExpectForActualAttributeKey={}] class Derived : R|Base| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Derived] constructor(): R|Derived| {
            LAZY_super<R|Base|>
        }

        public open override [ResolvedTo(BODY_RESOLVE)] [ExpectForActualAttributeKey={}] fun getSomething(): R|kotlin/String| {
            ^getSomething String(42)
        }

        public open override [ResolvedTo(BODY_RESOLVE)] [ExpectForActualAttributeKey={}] fun setSomething([ResolvedTo(BODY_RESOLVE)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }

FILE RAW TO BODY:
FILE: [ResolvedTo(BODY_RESOLVE)] Derived.kt
    public final [ResolvedTo(BODY_RESOLVE)] [ExpectForActualAttributeKey={}] class Derived : R|Base| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Derived, ExpectForActualAttributeKey={}] constructor(): R|Derived| {
            super<R|Base|>()
        }

        public open override [ResolvedTo(BODY_RESOLVE)] [ExpectForActualAttributeKey={}] fun getSomething(): R|kotlin/String| {
            ^getSomething String(42)
        }

        public open override [ResolvedTo(BODY_RESOLVE)] [ExpectForActualAttributeKey={}] fun setSomething([ResolvedTo(BODY_RESOLVE)] s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
